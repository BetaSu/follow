[{"/Users/su/Documents/follow/src/index.tsx":"1","/Users/su/Documents/follow/src/App.tsx":"2","/Users/su/Documents/follow/src/Containers/Flow/index.tsx":"3","/Users/su/Documents/follow/src/Containers/User/index.tsx":"4","/Users/su/Documents/follow/src/Containers/Recommend/index.tsx":"5","/Users/su/Documents/follow/src/fetcher/index.ts":"6","/Users/su/Documents/follow/src/Components/AuthorList/index.tsx":"7"},{"size":272,"mtime":1609410082344,"results":"8","hashOfConfig":"9"},{"size":600,"mtime":1609667081344,"results":"10","hashOfConfig":"9"},{"size":514,"mtime":1609680740156,"results":"11","hashOfConfig":"9"},{"size":1003,"mtime":1611033145705,"results":"12","hashOfConfig":"9"},{"size":1939,"mtime":1611033052088,"results":"13","hashOfConfig":"9"},{"size":1043,"mtime":1609654372439,"results":"14","hashOfConfig":"9"},{"size":2228,"mtime":1611033052080,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"vyunuq",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/su/Documents/follow/src/index.tsx",[],["32","33"],"/Users/su/Documents/follow/src/App.tsx",[],"/Users/su/Documents/follow/src/Containers/Flow/index.tsx",["34","35"],"import React, { useRef } from 'react';\nimport { IRouterProps } from '../types';\nimport { useFetchData } from '../../fetcher';\n\nexport default function Flow(props: IRouterProps) {\n  const lastUpdateFlowTimeRef = useRef('');\n  const { data: { list, time }, isError, mutate } = useFetchData('/flow/list', {\n    time: lastUpdateFlowTimeRef.current\n  }, {\n    revalidateOnFocus: false,\n  });\n\n  lastUpdateFlowTimeRef.current = time;\n\n  return (\n    <ul>{list.map((a: any) => <li key={a.id}>{a.title}</li>)}</ul>\n  );\n}\n","/Users/su/Documents/follow/src/Containers/User/index.tsx",[],"/Users/su/Documents/follow/src/Containers/Recommend/index.tsx",[],"/Users/su/Documents/follow/src/fetcher/index.ts",[],"/Users/su/Documents/follow/src/Components/AuthorList/index.tsx",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":7,"column":33,"nodeType":"42","messageId":"43","endLine":7,"endColumn":40},{"ruleId":"40","severity":1,"message":"44","line":7,"column":42,"nodeType":"42","messageId":"43","endLine":7,"endColumn":48},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"@typescript-eslint/no-unused-vars","'isError' is assigned a value but never used.","Identifier","unusedVar","'mutate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]